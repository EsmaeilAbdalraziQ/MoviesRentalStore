
@model Cinema.ViewModels.CustomerViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Customer Form </h2>
@using (Html.BeginForm("Save", "Customers"))
{
    @Html.ValidationSummary(excludePropertyErrors: true, message: "Please Fix The Following Errors. !")

    <div class="form-group">
        @Html.LabelFor(l => l.Customer.Name)
        @Html.TextBoxFor(t => t.Customer.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.Name)
    </div>

    <div class="form-group">
        @Html.LabelFor(l => l.Customer.MemberShipTypeID)
        @Html.DropDownListFor(t => t.Customer.MemberShipTypeID,
            new SelectList(Model.MemberShipTypes, "MemberShipTypeID", "Name"), "Select MemberShip Type", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.MemberShipTypeID)
    </div>

    <div class="form-group">
        @Html.LabelFor(l => l.Customer.BirthDate)
        @Html.TextBoxFor(t => t.Customer.BirthDate, "{0:d MMM yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.BirthDate)
    </div>

    <div class="form-check">
        @Html.CheckBoxFor(t => t.Customer.IsSubscribedToNewsLetter, new { @class = "form-check-input" }) Subscribed To News Letter ?
        @*@Html.LabelFor(l => l.IsSubscribedToNewsLetter, new { @class = "form-check-label ml-2 " })*@

        @Html.ValidationMessageFor(m => m.Customer.IsSubscribedToNewsLetter)
    </div>

    
    <div class="form-group">

        @Html.ActionLink("Back to List", "Index", "Customers", htmlAttributes: new { @class = "btn btn-primary mt-3" })  | |
        
        @Html.HiddenFor(h => h.Customer.Id)
        @Html.AntiForgeryToken()
        <button type="submit" class="btn btn-success mt-3">Save</button>
    </div>
}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
} 
